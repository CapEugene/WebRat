{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\BD_RPBD\\\\app_rating\\\\frontend\\\\src\\\\components\\\\ReviewCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CommentSection from './CommentSection';\nimport { likeReview } from '../services/api';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewCard = ({\n  review,\n  onAddComment\n}) => {\n  _s();\n  const [commentsVisible, setCommentsVisible] = useState(false);\n  const [likes, setLikes] = useState(review.likes);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n  }, [isLoggedIn]);\n  const toggleComments = () => {\n    setCommentsVisible(!commentsVisible);\n  };\n  const handleLike = async () => {\n    try {\n      setLikes(prevlikes => prevlikes + 1);\n      const response = await likeReview(review.reviewid);\n      const updatedLikes = response.likes;\n      setLikes(updatedLikes);\n    } catch (error) {\n      setLikes(prevlikes => prevlikes - 1);\n      console.error('Error liking review:', error);\n    }\n  };\n  const formatSafeDate = dataString => {\n    const date = new Date(dataString);\n    if (isNaN(date)) {\n      return 'Invalid Date';\n    }\n    return format(date, 'dd.MM.yyyy HH:mm:ss');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"User: \", review.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", review.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: review.reviewtext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Review Date: \", formatSafeDate(review.reviewdate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: handleLike,\n      children: [\"Like (\", likes, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.toggleButton,\n      onClick: toggleComments,\n      children: commentsVisible ? 'Hide Comments' : 'Show Comments'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), commentsVisible && /*#__PURE__*/_jsxDEV(CommentSection, {\n      comments: review.comments // Передаем массив комментариев\n      ,\n      onAddComment: commentText => onAddComment(review.reviewid, commentText) // Передаем функцию добавления комментария\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewCard, \"JtqCtxudl5pglPePsfYchCbdwa8=\");\n_c = ReviewCard;\nconst styles = {\n  card: {\n    border: '1px solid #ddd',\n    padding: '10px',\n    borderRadius: '8px',\n    margin: '10px 0'\n  },\n  button: {\n    marginTop: '10px',\n    padding: '5px 10px',\n    border: 'none',\n    backgroundColor: '#007BFF',\n    color: '#fff'\n  },\n  toggleButton: {\n    marginLeft: '10px',\n    padding: '5px 10px',\n    border: 'none',\n    backgroundColor: '#6c757d',\n    color: '#fff'\n  }\n};\nexport default ReviewCard;\nvar _c;\n$RefreshReg$(_c, \"ReviewCard\");","map":{"version":3,"names":["React","useState","useEffect","CommentSection","likeReview","format","jsxDEV","_jsxDEV","ReviewCard","review","onAddComment","_s","commentsVisible","setCommentsVisible","likes","setLikes","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","toggleComments","handleLike","prevlikes","response","reviewid","updatedLikes","error","console","formatSafeDate","dataString","date","Date","isNaN","style","styles","card","children","username","fileName","_jsxFileName","lineNumber","columnNumber","rating","reviewtext","reviewdate","button","onClick","toggleButton","comments","commentText","_c","border","padding","borderRadius","margin","marginTop","backgroundColor","color","marginLeft","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/BD_RPBD/app_rating/frontend/src/components/ReviewCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CommentSection from './CommentSection';\r\nimport { likeReview } from '../services/api';\r\nimport { format } from 'date-fns';\r\n\r\nconst ReviewCard = ({ review, onAddComment }) => {\r\n  const [commentsVisible, setCommentsVisible] = useState(false);\r\n  const [likes, setLikes] = useState(review.likes);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsLoggedIn(!!token);\r\n  }, [isLoggedIn]);\r\n\r\n  const toggleComments = () => {\r\n    setCommentsVisible(!commentsVisible);\r\n  };\r\n\r\n  const handleLike = async () => {\r\n    try {\r\n      setLikes((prevlikes) => prevlikes + 1);\r\n      const response = await likeReview(review.reviewid);\r\n      const updatedLikes = response.likes;\r\n      setLikes(updatedLikes);\r\n    } catch (error) {\r\n      setLikes((prevlikes) => prevlikes - 1);\r\n      console.error('Error liking review:', error);\r\n    }\r\n  };\r\n\r\n  const formatSafeDate = (dataString) => {\r\n    const date = new Date(dataString);\r\n    if (isNaN(date)) {\r\n      return 'Invalid Date';\r\n    }\r\n    return format(date, 'dd.MM.yyyy HH:mm:ss');\r\n  }\r\n\r\n  return (\r\n    <div style={styles.card}>\r\n      <h4>User: {review.username}</h4>\r\n      <p>Rating: {review.rating}</p>\r\n      <p>{review.reviewtext}</p>\r\n      <p>Review Date: {formatSafeDate(review.reviewdate)}</p>\r\n      {isLoggedIn && <button style={styles.button} onClick={handleLike}>Like ({likes})</button>}\r\n      <button style={styles.toggleButton} onClick={toggleComments}>\r\n        {commentsVisible ? 'Hide Comments' : 'Show Comments'}\r\n      </button>\r\n\r\n      {commentsVisible && (\r\n        <CommentSection\r\n      comments={review.comments} // Передаем массив комментариев\r\n      onAddComment={(commentText) => onAddComment(review.reviewid, commentText)} // Передаем функцию добавления комментария\r\n/>\r\n\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  card: { border: '1px solid #ddd', padding: '10px', borderRadius: '8px', margin: '10px 0' },\r\n  button: { marginTop: '10px', padding: '5px 10px', border: 'none', backgroundColor: '#007BFF', color: '#fff' },\r\n  toggleButton: { marginLeft: '10px', padding: '5px 10px', border: 'none', backgroundColor: '#6c757d', color: '#fff' },\r\n};\r\n\r\nexport default ReviewCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACQ,MAAM,CAACK,KAAK,CAAC;EAChD,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CH,aAAa,CAAC,CAAC,CAACC,KAAK,CAAC;EACxB,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3BR,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACtC,CAAC;EAED,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFP,QAAQ,CAAEQ,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACtC,MAAMC,QAAQ,GAAG,MAAMpB,UAAU,CAACK,MAAM,CAACgB,QAAQ,CAAC;MAClD,MAAMC,YAAY,GAAGF,QAAQ,CAACV,KAAK;MACnCC,QAAQ,CAACW,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,QAAQ,CAAEQ,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACtCK,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,cAAc,GAAIC,UAAU,IAAK;IACrC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,IAAIG,KAAK,CAACF,IAAI,CAAC,EAAE;MACf,OAAO,cAAc;IACvB;IACA,OAAO1B,MAAM,CAAC0B,IAAI,EAAE,qBAAqB,CAAC;EAC5C,CAAC;EAED,oBACExB,OAAA;IAAK2B,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAAC,QAAA,gBACtB9B,OAAA;MAAA8B,QAAA,GAAI,QAAM,EAAC5B,MAAM,CAAC6B,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCnC,OAAA;MAAA8B,QAAA,GAAG,UAAQ,EAAC5B,MAAM,CAACkC,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BnC,OAAA;MAAA8B,QAAA,EAAI5B,MAAM,CAACmC;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnC,OAAA;MAAA8B,QAAA,GAAG,eAAa,EAACR,cAAc,CAACpB,MAAM,CAACoC,UAAU,CAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtD1B,UAAU,iBAAIT,OAAA;MAAQ2B,KAAK,EAAEC,MAAM,CAACW,MAAO;MAACC,OAAO,EAAEzB,UAAW;MAAAe,QAAA,GAAC,QAAM,EAACvB,KAAK,EAAC,GAAC;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzFnC,OAAA;MAAQ2B,KAAK,EAAEC,MAAM,CAACa,YAAa;MAACD,OAAO,EAAE1B,cAAe;MAAAgB,QAAA,EACzDzB,eAAe,GAAG,eAAe,GAAG;IAAe;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,EAER9B,eAAe,iBACdL,OAAA,CAACJ,cAAc;MACjB8C,QAAQ,EAAExC,MAAM,CAACwC,QAAS,CAAC;MAAA;MAC3BvC,YAAY,EAAGwC,WAAW,IAAKxC,YAAY,CAACD,MAAM,CAACgB,QAAQ,EAAEyB,WAAW,CAAE,CAAC;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAEM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAtDIH,UAAU;AAAA2C,EAAA,GAAV3C,UAAU;AAwDhB,MAAM2B,MAAM,GAAG;EACbC,IAAI,EAAE;IAAEgB,MAAM,EAAE,gBAAgB;IAAEC,OAAO,EAAE,MAAM;IAAEC,YAAY,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAS,CAAC;EAC1FT,MAAM,EAAE;IAAEU,SAAS,EAAE,MAAM;IAAEH,OAAO,EAAE,UAAU;IAAED,MAAM,EAAE,MAAM;IAAEK,eAAe,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAO,CAAC;EAC7GV,YAAY,EAAE;IAAEW,UAAU,EAAE,MAAM;IAAEN,OAAO,EAAE,UAAU;IAAED,MAAM,EAAE,MAAM;IAAEK,eAAe,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAO;AACrH,CAAC;AAED,eAAelD,UAAU;AAAC,IAAA2C,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}