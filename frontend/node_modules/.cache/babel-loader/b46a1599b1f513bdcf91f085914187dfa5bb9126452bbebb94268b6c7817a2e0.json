{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst apiClient = axios.create({\n  baseURL: API_URL\n});\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n/*export const fetchGames = () => axios.get(`${API_URL}/games/`);\r\nexport const fetchGameDetails = (id) => axios.get(`${API_URL}/games/${id}`);\r\nexport const fetchGameReviews = (gameId) => axios.get(`${API_URL}/reviews/${gameId}`);\r\nexport const fetchReviewComments = (reviewId) => axios.get(`${API_URL}/comments/${reviewId}`);\r\nexport const addComment = (reviewId, commentText) => axios.post(`${API_URL}/comments/`, { reviewId, commentText });\r\nexport const registerUser = (data) => axios.post(`${API_URL}/auth/register/`, data);\r\nexport const loginUser = (data) => axios.post(`${API_URL}/auth/login/`, data);*/\n\nexport const fetchGames = () => apiClient.get(`/games/`);\nexport const fetchGameDetails = id => apiClient.get(`/games/${id}`);\nexport const fetchGameReviews = gameId => apiClient.get(`/reviews/${gameId}`);\nexport const fetchReviewComments = reviewId => apiClient.get(`/comments/${reviewId}`);\nexport const addComment = async (reviewId, commentText) => {\n  const response = await apiClient.post('/comments/', {\n    reviewId,\n    commentText\n  });\n  return response.data; // Убедитесь, что возвращается полный объект комментария\n};\nexport const addReview = async (gameId, rating, reviewText) => {\n  const response = await apiClient.post('/reviews/', {\n    gameId,\n    rating,\n    reviewText\n  });\n  return response.data;\n};\nexport const registerUser = data => apiClient.post(`/auth/register/`, data);\nexport const loginUser = data => apiClient.post(`/auth/login/`, data);\nexport const getUserProfile = () => apiClient.get(`/users/profile/`);\nexport const getTokenInfo = () => apiClient.get(`/users/tokeninfo/`);\nexport const likeReview = async reviewId => {\n  const response = await apiClient.post(`/reviews/${reviewId}/like/`);\n  return response.data;\n};\nexport const fetchFavorites = async () => {\n  const response = await apiClient.get('/favorites/');\n  return response.data;\n};\nexport const fetchGenres = async () => {\n  //console.log('Fetching genres...');\n  const response = await apiClient.get(`/games/genres/getgenres/`);\n  return response.data;\n};\nexport const addFavorite = async gameId => {\n  const response = await apiClient.post('/favorites/add/', {\n    gameId\n  });\n  return response.data;\n};\nexport const removeFavorite = async gameId => {\n  const response = await apiClient.delete(`/favorites/${gameId}/`);\n  return response.data;\n};\nexport const addGame = async data => {\n  const response = await apiClient.post('/games/add/', data);\n  return response.data;\n};\nexport const deleteGame = async gameId => apiClient.delete(`/games/${gameId}/`);","map":{"version":3,"names":["axios","API_URL","apiClient","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","fetchGames","get","fetchGameDetails","id","fetchGameReviews","gameId","fetchReviewComments","reviewId","addComment","commentText","response","post","data","addReview","rating","reviewText","registerUser","loginUser","getUserProfile","getTokenInfo","likeReview","fetchFavorites","fetchGenres","addFavorite","removeFavorite","delete","addGame","deleteGame"],"sources":["C:/Users/EvgeXa/Desktop/BD_RPBD/app_rating/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: API_URL,\r\n});\r\n\r\napiClient.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\n/*export const fetchGames = () => axios.get(`${API_URL}/games/`);\r\nexport const fetchGameDetails = (id) => axios.get(`${API_URL}/games/${id}`);\r\nexport const fetchGameReviews = (gameId) => axios.get(`${API_URL}/reviews/${gameId}`);\r\nexport const fetchReviewComments = (reviewId) => axios.get(`${API_URL}/comments/${reviewId}`);\r\nexport const addComment = (reviewId, commentText) => axios.post(`${API_URL}/comments/`, { reviewId, commentText });\r\nexport const registerUser = (data) => axios.post(`${API_URL}/auth/register/`, data);\r\nexport const loginUser = (data) => axios.post(`${API_URL}/auth/login/`, data);*/\r\n\r\nexport const fetchGames = () => apiClient.get(`/games/`);\r\nexport const fetchGameDetails = (id) => apiClient.get(`/games/${id}`);\r\nexport const fetchGameReviews = (gameId) => apiClient.get(`/reviews/${gameId}`);\r\nexport const fetchReviewComments = (reviewId) => apiClient.get(`/comments/${reviewId}`);\r\nexport const addComment = async (reviewId, commentText) => {\r\n  const response = await apiClient.post('/comments/', { reviewId, commentText });\r\n  return response.data; // Убедитесь, что возвращается полный объект комментария\r\n};\r\nexport const addReview = async (gameId, rating, reviewText) => {\r\n  const response = await apiClient.post('/reviews/', { gameId, rating, reviewText });\r\n  return response.data;\r\n};\r\nexport const registerUser = (data) => apiClient.post(`/auth/register/`, data);\r\nexport const loginUser = (data) => apiClient.post(`/auth/login/`, data);\r\nexport const getUserProfile = () => apiClient.get(`/users/profile/`);\r\nexport const getTokenInfo = () => apiClient.get(`/users/tokeninfo/`);\r\nexport const likeReview = async (reviewId) => {\r\n  const response = await apiClient.post(`/reviews/${reviewId}/like/`);\r\n  return response.data;\r\n};\r\n\r\nexport const fetchFavorites = async () => {\r\n  const response = await apiClient.get('/favorites/');\r\n  return response.data;\r\n};\r\n\r\nexport const fetchGenres = async () => {\r\n  //console.log('Fetching genres...');\r\n  const response = await apiClient.get(`/games/genres/getgenres/`);\r\n  return response.data;\r\n}\r\n\r\nexport const addFavorite = async (gameId) => {\r\n  const response = await apiClient.post('/favorites/add/', { gameId });\r\n  return response.data;\r\n};\r\n\r\nexport const removeFavorite = async (gameId) => {\r\n  const response = await apiClient.delete(`/favorites/${gameId}/`);\r\n  return response.data;\r\n};\r\n\r\nexport const addGame = async (data) => {\r\n  const response = await apiClient.post('/games/add/', data);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteGame = async (gameId) => apiClient.delete(`/games/${gameId}/`);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC3BC,OAAO,EAAEH;AACb,CAAC,CAAC;AAEFC,SAAS,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC3C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMM,UAAU,GAAGA,CAAA,KAAMZ,SAAS,CAACa,GAAG,CAAC,SAAS,CAAC;AACxD,OAAO,MAAMC,gBAAgB,GAAIC,EAAE,IAAKf,SAAS,CAACa,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;AACrE,OAAO,MAAMC,gBAAgB,GAAIC,MAAM,IAAKjB,SAAS,CAACa,GAAG,CAAC,YAAYI,MAAM,EAAE,CAAC;AAC/E,OAAO,MAAMC,mBAAmB,GAAIC,QAAQ,IAAKnB,SAAS,CAACa,GAAG,CAAC,aAAaM,QAAQ,EAAE,CAAC;AACvF,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOD,QAAQ,EAAEE,WAAW,KAAK;EACzD,MAAMC,QAAQ,GAAG,MAAMtB,SAAS,CAACuB,IAAI,CAAC,YAAY,EAAE;IAAEJ,QAAQ;IAAEE;EAAY,CAAC,CAAC;EAC9E,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AACD,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOR,MAAM,EAAES,MAAM,EAAEC,UAAU,KAAK;EAC7D,MAAML,QAAQ,GAAG,MAAMtB,SAAS,CAACuB,IAAI,CAAC,WAAW,EAAE;IAAEN,MAAM;IAAES,MAAM;IAAEC;EAAW,CAAC,CAAC;EAClF,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;AACD,OAAO,MAAMI,YAAY,GAAIJ,IAAI,IAAKxB,SAAS,CAACuB,IAAI,CAAC,iBAAiB,EAAEC,IAAI,CAAC;AAC7E,OAAO,MAAMK,SAAS,GAAIL,IAAI,IAAKxB,SAAS,CAACuB,IAAI,CAAC,cAAc,EAAEC,IAAI,CAAC;AACvE,OAAO,MAAMM,cAAc,GAAGA,CAAA,KAAM9B,SAAS,CAACa,GAAG,CAAC,iBAAiB,CAAC;AACpE,OAAO,MAAMkB,YAAY,GAAGA,CAAA,KAAM/B,SAAS,CAACa,GAAG,CAAC,mBAAmB,CAAC;AACpE,OAAO,MAAMmB,UAAU,GAAG,MAAOb,QAAQ,IAAK;EAC5C,MAAMG,QAAQ,GAAG,MAAMtB,SAAS,CAACuB,IAAI,CAAC,YAAYJ,QAAQ,QAAQ,CAAC;EACnE,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMX,QAAQ,GAAG,MAAMtB,SAAS,CAACa,GAAG,CAAC,aAAa,CAAC;EACnD,OAAOS,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC;EACA,MAAMZ,QAAQ,GAAG,MAAMtB,SAAS,CAACa,GAAG,CAAC,0BAA0B,CAAC;EAChE,OAAOS,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMW,WAAW,GAAG,MAAOlB,MAAM,IAAK;EAC3C,MAAMK,QAAQ,GAAG,MAAMtB,SAAS,CAACuB,IAAI,CAAC,iBAAiB,EAAE;IAAEN;EAAO,CAAC,CAAC;EACpE,OAAOK,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMY,cAAc,GAAG,MAAOnB,MAAM,IAAK;EAC9C,MAAMK,QAAQ,GAAG,MAAMtB,SAAS,CAACqC,MAAM,CAAC,cAAcpB,MAAM,GAAG,CAAC;EAChE,OAAOK,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMc,OAAO,GAAG,MAAOd,IAAI,IAAK;EACrC,MAAMF,QAAQ,GAAG,MAAMtB,SAAS,CAACuB,IAAI,CAAC,aAAa,EAAEC,IAAI,CAAC;EAC1D,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMe,UAAU,GAAG,MAAOtB,MAAM,IAAKjB,SAAS,CAACqC,MAAM,CAAC,UAAUpB,MAAM,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}