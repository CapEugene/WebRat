{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\BD_RPBD\\\\app_rating\\\\frontend\\\\src\\\\pages\\\\GameDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReviewCard from '../components/ReviewCard';\nimport { fetchGameDetails, fetchGameReviews, fetchReviewComments, addComment, addReview, addFavorite, removeFavorite, fetchFavorites } from '../services/api';\nimport ReviewForm from '../components/ReviewForm';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameDetailsPage = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  id = parseInt(id, 10);\n  const [game, setGame] = useState({});\n  const [reviews, setReviews] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [sortCriteria, setSortCriteria] = useState('rating');\n  useEffect(() => {\n    fetchGameDetails(id).then(response => setGame(response.data));\n    fetchGameReviews(id).then(async response => {\n      const reviewsWithComments = await Promise.all(response.data.map(async review => {\n        const comments = await fetchReviewComments(review.reviewid);\n        return {\n          ...review,\n          comments: comments.data\n        };\n      }));\n      setReviews(reviewsWithComments);\n    });\n  }, [id]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n    const checkFavorites = async () => {\n      const favorites = await fetchFavorites();\n      // console.log(\"Fetched favorites:\", favorites);\n      setIsFavorite(favorites.some(favorite => favorite.gameid === id));\n    };\n    isLoggedIn && checkFavorites();\n  }, [game.gameid, id, isLoggedIn]);\n  const handleAddComment = async (reviewId, commentText) => {\n    try {\n      const newComment = await addComment(reviewId, commentText);\n\n      // console.log('New comment:', newComment);\n\n      setReviews(prevReviews => prevReviews.map(review => review.reviewid === reviewId ? {\n        ...review,\n        comments: [...review.comments, newComment]\n      } : review));\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  const toggleFavorite = async () => {\n    try {\n      if (isFavorite) {\n        await removeFavorite(game.gameid);\n        setIsFavorite(false);\n      } else {\n        await addFavorite(game.gameid);\n        setIsFavorite(true);\n      }\n    } catch (error) {\n      console.error('Failed to toggle favorite:', error);\n    }\n  };\n  const handleAddReview = async (rating, reviewText) => {\n    try {\n      //console.log('Sending review:', { gameId: id, rating, reviewText });\n      const review = await addReview(id, rating, reviewText);\n      setReviews(prevReviews => [...prevReviews, {\n        ...review,\n        comments: [],\n        username: review.username || 'Current User'\n      }]);\n      const updatedGame = await fetchGameDetails(id);\n      setGame(updatedGame.data);\n    } catch (error) {\n      console.error('Error adding review:', error);\n    }\n  };\n  const formatSafeDate = dataString => {\n    const date = new Date(dataString);\n    if (isNaN(date)) {\n      return 'Invalid Date';\n    }\n    return format(date, 'dd.MM.yyyy HH:mm:ss');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: game.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: game.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Main Information:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Publisher: \", game.publisher]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Developer: \", game.developer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Release Data: \", formatSafeDate(game.releasedate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Genre: \", game.genres ? game.genres.join(', ') : 'No genres available']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Platform: \", game.platform]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFavorite,\n      children: isFavorite ? 'Remove from Favorite' : 'Add to Favorites'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Write a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReviewForm, {\n      onAddReview: handleAddReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), reviews.map(review => /*#__PURE__*/_jsxDEV(ReviewCard, {\n      review: review,\n      onAddComment: handleAddComment\n    }, review.reviewid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(GameDetailsPage, \"exn0RWcNjdQaMUuZNk8rZlv+rgI=\", false, function () {\n  return [useParams];\n});\n_c = GameDetailsPage;\nexport default GameDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"GameDetailsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","ReviewCard","fetchGameDetails","fetchGameReviews","fetchReviewComments","addComment","addReview","addFavorite","removeFavorite","fetchFavorites","ReviewForm","format","jsxDEV","_jsxDEV","GameDetailsPage","_s","id","parseInt","game","setGame","reviews","setReviews","isFavorite","setIsFavorite","isLoggedIn","setIsLoggedIn","sortCriteria","setSortCriteria","then","response","data","reviewsWithComments","Promise","all","map","review","comments","reviewid","token","localStorage","getItem","checkFavorites","favorites","some","favorite","gameid","handleAddComment","reviewId","commentText","newComment","prevReviews","error","console","toggleFavorite","handleAddReview","rating","reviewText","username","updatedGame","formatSafeDate","dataString","date","Date","isNaN","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","publisher","developer","releasedate","genres","join","platform","onClick","onAddReview","onAddComment","_c","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/BD_RPBD/app_rating/frontend/src/pages/GameDetailsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReviewCard from '../components/ReviewCard';\r\nimport { fetchGameDetails, fetchGameReviews, fetchReviewComments, addComment, addReview, addFavorite, removeFavorite, fetchFavorites } from '../services/api';\r\nimport ReviewForm from '../components/ReviewForm';\r\nimport { format } from 'date-fns';\r\n\r\nconst GameDetailsPage = () => {\r\n  let { id } = useParams();\r\n  id = parseInt(id, 10);\r\n  const [game, setGame] = useState({});\r\n  const [reviews, setReviews] = useState([]);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [sortCriteria, setSortCriteria] = useState('rating');\r\n\r\n  useEffect(() => {\r\n    fetchGameDetails(id).then((response) => setGame(response.data));\r\n    fetchGameReviews(id).then(async (response) => {\r\n      const reviewsWithComments = await Promise.all(\r\n        response.data.map(async (review) => {\r\n          const comments = await fetchReviewComments(review.reviewid);\r\n          return { ...review, comments: comments.data };\r\n        })\r\n      );\r\n      setReviews(reviewsWithComments);\r\n    });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsLoggedIn(!!token);\r\n    const checkFavorites = async () => {\r\n      const favorites = await fetchFavorites();\r\n      // console.log(\"Fetched favorites:\", favorites);\r\n      setIsFavorite(favorites.some((favorite) => favorite.gameid === id));\r\n    };\r\n\r\n    isLoggedIn && checkFavorites();\r\n  }, [game.gameid, id, isLoggedIn])\r\n\r\n  const handleAddComment = async (reviewId, commentText) => {\r\n    try {\r\n      const newComment = await addComment(reviewId, commentText);\r\n  \r\n      // console.log('New comment:', newComment);\r\n  \r\n      setReviews((prevReviews) =>\r\n        prevReviews.map((review) =>\r\n          review.reviewid === reviewId\r\n            ? { ...review, comments: [...review.comments, newComment] }\r\n            : review\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error);\r\n    }\r\n  };\r\n\r\n  const toggleFavorite = async () => {\r\n    try {\r\n      if (isFavorite) {\r\n        await removeFavorite(game.gameid);\r\n        setIsFavorite(false);\r\n      } else {\r\n        await addFavorite(game.gameid);\r\n        setIsFavorite(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to toggle favorite:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddReview = async (rating, reviewText) => {\r\n    try {\r\n      //console.log('Sending review:', { gameId: id, rating, reviewText });\r\n      const review = await addReview(id, rating, reviewText);\r\n      setReviews((prevReviews) => [...prevReviews, { ...review, comments: [], username: review.username || 'Current User' }]);\r\n      const updatedGame = await fetchGameDetails(id);\r\n      setGame(updatedGame.data);\r\n    } catch (error) {\r\n      console.error('Error adding review:', error);\r\n    }\r\n  };\r\n\r\n  const formatSafeDate = (dataString) => {\r\n    const date = new Date(dataString);\r\n    if (isNaN(date)) {\r\n      return 'Invalid Date';\r\n    }\r\n    return format(date, 'dd.MM.yyyy HH:mm:ss');\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <h1>{game.title}</h1>\r\n      <h2>{game.description}</h2>\r\n      <h3>Main Information:</h3>\r\n      <li>Publisher: {game.publisher}</li>\r\n      <li>Developer: {game.developer}</li>\r\n      <li>Release Data: {formatSafeDate(game.releasedate)}</li>\r\n      <li>Genre: {game.genres ? game.genres.join(', ') : 'No genres available'}</li>\r\n      <li>Platform: {game.platform}</li>\r\n      {isLoggedIn &&<button onClick={toggleFavorite}>\r\n        {isFavorite ? 'Remove from Favorite' : 'Add to Favorites'}\r\n      </button>}\r\n      <h3>Write a Review</h3>\r\n      <ReviewForm onAddReview={handleAddReview} />\r\n      <h3>Reviews</h3>\r\n      {reviews.map((review) => (\r\n        <ReviewCard key={review.reviewid} review={review} onAddComment={handleAddComment} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameDetailsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}