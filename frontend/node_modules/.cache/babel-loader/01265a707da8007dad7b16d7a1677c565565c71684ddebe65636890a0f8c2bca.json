{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\TP\\\\WebRat\\\\frontend\\\\src\\\\components\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/CommentSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  comments,\n  onAddComment\n}) => {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const [commentList, setCommentList] = useState(comments); // Локальное состояние комментариев\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newComment.trim() === '') return;\n    try {\n      // Добавляем комментарий через onAddComment\n      const addedComment = await onAddComment(newComment);\n      console.log(addedComment);\n\n      // Обновляем локальное состояние, добавляя новый комментарий\n      setCommentList(prev => [...prev, addedComment]);\n      setNewComment(''); // Очищаем поле ввода\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  const formatSafeDate = dataString => {\n    const date = new Date(dataString);\n    if (isNaN(date)) {\n      return 'Invalid Date';\n    }\n    return format(date, 'dd.MM.yyyy');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"comment-section-title\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comment-list\",\n      children: commentList.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"comment-author\",\n          children: [(comment === null || comment === void 0 ? void 0 : comment.username) || 'Unknown User', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formatSafeDate(comment.commentdate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-text\",\n          children: (comment === null || comment === void 0 ? void 0 : comment.commenttext) || 'No text available'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, (comment === null || comment === void 0 ? void 0 : comment.commentid) || Math.random(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write a comment...\",\n        className: \"comment-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"comment-submit-button\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comment-login-notice\",\n      children: \"Please log in to add a comment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"ZSclMvFNxQuBGQ9AhfCdbKdEBJo=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommentSection","comments","onAddComment","_s","newComment","setNewComment","commentList","setCommentList","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","handleSubmit","e","preventDefault","trim","addedComment","console","log","prev","error","formatSafeDate","dataString","date","Date","isNaN","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","username","commentdate","commenttext","commentid","Math","random","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/TP/WebRat/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/CommentSection.css';\r\n\r\nconst CommentSection = ({ comments, onAddComment }) => {\r\n  const [newComment, setNewComment] = useState('');\r\n  const [commentList, setCommentList] = useState(comments); // Локальное состояние комментариев\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsLoggedIn(!!token);\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newComment.trim() === '') return;\r\n  \r\n    try {\r\n      // Добавляем комментарий через onAddComment\r\n      const addedComment = await onAddComment(newComment);\r\n  \r\n      console.log(addedComment);\r\n  \r\n      // Обновляем локальное состояние, добавляя новый комментарий\r\n      setCommentList((prev) => [...prev, addedComment]);\r\n  \r\n      setNewComment(''); // Очищаем поле ввода\r\n    } catch (error) {\r\n      console.error('Error posting comment:', error);\r\n    }\r\n  };\r\n\r\n    const formatSafeDate = (dataString) => {\r\n      const date = new Date(dataString);\r\n      if (isNaN(date)) {\r\n        return 'Invalid Date';\r\n      }\r\n      return format(date, 'dd.MM.yyyy');\r\n    }\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      <h4 className=\"comment-section-title\">Comments</h4>\r\n      <ul className=\"comment-list\">\r\n        {commentList.map((comment) => (\r\n          <li key={comment?.commentid || Math.random()} className=\"comment-item\">\r\n            <strong className=\"comment-author\">\r\n              {comment?.username || 'Unknown User'}:\r\n            </strong>\r\n            <p>{formatSafeDate(comment.commentdate)}</p>\r\n            <p className=\"comment-text\">{comment?.commenttext || 'No text available'}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n\r\n      {isLoggedIn ? (\r\n        <form className=\"comment-form\" onSubmit={handleSubmit}>\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder=\"Write a comment...\"\r\n            className=\"comment-textarea\"\r\n          />\r\n          <button type=\"submit\" className=\"comment-submit-button\">\r\n            Post\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <p className=\"comment-login-notice\">Please log in to add a comment.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default CommentSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}