{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\BD_RPBD\\\\app_rating\\\\frontend\\\\src\\\\pages\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchGames, fetchGenres, addGame, deleteGame, getUserProfile } from '../services/api';\nimport '../styles/AdminPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [games, setGames] = useState([]);\n  const [editingGame, setEditingGame] = useState(null);\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\n  const [profile, setProfile] = useState(null); // Изначально null, чтобы проверить, когда данные загружены\n  const [loading, setLoading] = useState(true); // Для управления состоянием загрузки\n  const [genres, setGenres] = useState([]);\n  const navigate = useNavigate();\n  const [newGame, setNewGame] = useState({\n    title: '',\n    genre: '',\n    releaseDate: '',\n    developer: '',\n    publisher: '',\n    platform: '',\n    description: '',\n    coverImage: ''\n  });\n  const platforms = ['PC', 'PlayStation', 'XBox', 'Nintendo'];\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n      return;\n    }\n\n    // Загружаем профиль пользователя\n    getUserProfile().then(response => {\n      setProfile(response.data);\n      if (response.data.role !== 'admin') {\n        navigate('/profile'); // Перенаправляем, если не админ\n      }\n    }).catch(error => {\n      console.error('Error fetching profile:', error);\n      navigate('/'); // Перенаправляем в случае ошибки\n    }).finally(() => {\n      setLoading(false); // Завершаем загрузку\n    });\n  }, [navigate]);\n  useEffect(() => {\n    // Загружаем список игр только после загрузки профиля и если пользователь админ\n    if ((profile === null || profile === void 0 ? void 0 : profile.role) === 'admin') {\n      fetchGames().then(response => setGames(response.data)).catch(error => console.error('Error fetching games:', error));\n      fetchGenres().then(response => setGenres(response)).catch(error => console.error('Error fetching genres:', error));\n    }\n  }, [profile]);\n  const handleAddGame = async () => {\n    try {\n      const addedGame = await addGame(newGame);\n      setGames(prevGames => [...prevGames, addedGame]);\n      setNewGame({\n        title: '',\n        genre: '',\n        releaseDate: '',\n        developer: '',\n        publisher: '',\n        platform: '',\n        description: '',\n        coverImage: ''\n      });\n    } catch (error) {\n      console.error('Error adding game:', error);\n    }\n  };\n  const handleEditGame = game => {\n    setEditingGame(game);\n    setIsEditModalVisible(true);\n  };\n  const handleSaveChanges = async () => {\n    try {\n      console.log(editingGame);\n      //   const updatedGame = await addGame(editingGame);\n      //   setGames((prevGames) => \n      //     prevGames.map((game) => \n      //       (game.gameid === updatedGame.gameid ? updatedGame : game)\n      //   )\n      // );\n      //   setEditingGame(null);\n      //   setIsEditModalVisible(false);\n    } catch (error) {\n      console.error('Error updating game:', error);\n    }\n  };\n  const handleDeleteGame = async gameId => {\n    try {\n      await deleteGame(gameId);\n      setGames(prevGames => prevGames.filter(game => game.gameid !== gameId));\n    } catch (error) {\n      console.error('Error deleting game:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewGame(prevGame => ({\n      ...prevGame,\n      [name]: value\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }, this); // Показываем индикатор загрузки\n  }\n  if ((profile === null || profile === void 0 ? void 0 : profile.role) !== 'admin') {\n    return null; // Если пользователь не админ, ничего не показываем\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"admin-title\",\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Manage Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: newGame.title,\n        onChange: handleInputChange,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"genre\",\n        value: newGame.genre,\n        onChange: handleInputChange,\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.genreid,\n          children: genre.genrename\n        }, genre.genreid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"releaseDate\",\n        value: newGame.releaseDate,\n        onChange: handleInputChange,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"developer\",\n        placeholder: \"Developer\",\n        value: newGame.developer,\n        onChange: handleInputChange,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"publisher\",\n        placeholder: \"Publisher\",\n        value: newGame.publisher,\n        onChange: handleInputChange,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"platform\",\n        value: newGame.platform,\n        onChange: handleInputChange,\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), platforms.map(platform => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: platform,\n          children: platform\n        }, platform, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: newGame.description,\n        onChange: handleInputChange,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"coverImage\",\n        placeholder: \"Cover Image URL\",\n        value: newGame.coverImage,\n        onChange: handleInputChange,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddGame,\n        className: \"add-button\",\n        children: \"Add Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-title\",\n      children: \"Existing Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"game-list\",\n      children: [games.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"game-item\",\n        children: [game.title, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditGame(game),\n          className: \"update-button\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteGame(game.gameid),\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 7\n        }, this)]\n      }, game.gameid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this)), isEditModalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"Title\",\n            value: editingGame.title,\n            onChange: e => setEditingGame({\n              ...editingGame,\n              title: e.target.value\n            }),\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"genre\",\n            value: editingGame.genres[0],\n            onChange: e => setEditingGame({\n              ...editingGame,\n              genres: e.target.value\n            }),\n            className: \"input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 9\n            }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: genre.genreid,\n              children: genre.genrename\n            }, genre.genreid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 11\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"releaseDate\",\n            value: editingGame.releasedate,\n            onChange: e => setEditingGame({\n              ...editingGame,\n              releaseDate: e.target.value\n            }),\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"developer\",\n            placeholder: \"Developer\",\n            value: editingGame.developer,\n            onChange: e => setEditingGame({\n              ...editingGame,\n              developer: e.target.value\n            }),\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"publisher\",\n            placeholder: \"Publisher\",\n            value: editingGame.publisher,\n            onChange: e => setEditingGame({\n              ...editingGame,\n              publisher: e.target.value\n            }),\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"platform\",\n            value: editingGame.platform,\n            onChange: e => setEditingGame({\n              ...editingGame,\n              platform: e.target.value\n            }),\n            className: \"input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Platform\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 9\n            }, this), platforms.map(platform => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: platform,\n              children: platform\n            }, platform, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 11\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            placeholder: \"Description\",\n            value: editingGame.description,\n            onChange: e => setEditingGame({\n              ...editingGame,\n              description: e.target.value\n            }),\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"coverImage\",\n            placeholder: \"Cover Image URL\",\n            value: editingGame.coverimage,\n            onChange: e => setEditingGame({\n              ...editingGame,\n              coverImage: e.target.value\n            }),\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveChanges,\n            className: \"save-button\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsEditModalVisible(false),\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"vbcpXSwB6Fzed0JQx5yhbshSJ9Q=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","fetchGames","fetchGenres","addGame","deleteGame","getUserProfile","jsxDEV","_jsxDEV","AdminPage","_s","games","setGames","editingGame","setEditingGame","isEditModalVisible","setIsEditModalVisible","profile","setProfile","loading","setLoading","genres","setGenres","navigate","newGame","setNewGame","title","genre","releaseDate","developer","publisher","platform","description","coverImage","platforms","token","localStorage","getItem","then","response","data","role","catch","error","console","finally","handleAddGame","addedGame","prevGames","handleEditGame","game","handleSaveChanges","log","handleDeleteGame","gameId","filter","gameid","handleInputChange","e","name","value","target","prevGame","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","map","genreid","genrename","onClick","releasedate","coverimage","_c","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/BD_RPBD/app_rating/frontend/src/pages/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchGames, fetchGenres, addGame, deleteGame, getUserProfile } from '../services/api';\r\nimport '../styles/AdminPage.css';\r\n\r\nconst AdminPage = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [editingGame, setEditingGame] = useState(null);\r\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\r\n  const [profile, setProfile] = useState(null); // Изначально null, чтобы проверить, когда данные загружены\r\n  const [loading, setLoading] = useState(true); // Для управления состоянием загрузки\r\n  const [genres, setGenres] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [newGame, setNewGame] = useState({\r\n    title: '',\r\n    genre: '',\r\n    releaseDate: '',\r\n    developer: '',\r\n    publisher: '',\r\n    platform: '',\r\n    description: '',\r\n    coverImage: '',\r\n  });\r\n\r\n  const platforms = ['PC', 'PlayStation', 'XBox', 'Nintendo'];\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    // Загружаем профиль пользователя\r\n    getUserProfile()\r\n      .then((response) => {\r\n        setProfile(response.data);\r\n        if (response.data.role !== 'admin') {\r\n          navigate('/profile'); // Перенаправляем, если не админ\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching profile:', error);\r\n        navigate('/'); // Перенаправляем в случае ошибки\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Завершаем загрузку\r\n      });\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    // Загружаем список игр только после загрузки профиля и если пользователь админ\r\n    if (profile?.role === 'admin') {\r\n      fetchGames()\r\n        .then((response) => setGames(response.data))\r\n        .catch((error) => console.error('Error fetching games:', error));\r\n\r\n      fetchGenres()\r\n        .then((response) => setGenres(response))\r\n        .catch((error) => console.error('Error fetching genres:', error));\r\n    }\r\n  }, [profile]);\r\n\r\n  const handleAddGame = async () => {\r\n    try {\r\n      const addedGame = await addGame(newGame);\r\n      setGames((prevGames) => [...prevGames, addedGame]);\r\n      setNewGame({\r\n        title: '',\r\n        genre: '',\r\n        releaseDate: '',\r\n        developer: '',\r\n        publisher: '',\r\n        platform: '',\r\n        description: '',\r\n        coverImage: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding game:', error);\r\n    }\r\n  };\r\n\r\n  const handleEditGame = (game) => {\r\n    setEditingGame(game);\r\n    setIsEditModalVisible(true);\r\n  };\r\n\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      console.log(editingGame);\r\n    //   const updatedGame = await addGame(editingGame);\r\n    //   setGames((prevGames) => \r\n    //     prevGames.map((game) => \r\n    //       (game.gameid === updatedGame.gameid ? updatedGame : game)\r\n    //   )\r\n    // );\r\n    //   setEditingGame(null);\r\n    //   setIsEditModalVisible(false);\r\n    } catch (error) {\r\n      console.error('Error updating game:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteGame = async (gameId) => {\r\n    try {\r\n      await deleteGame(gameId);\r\n      setGames((prevGames) => prevGames.filter((game) => game.gameid !== gameId));\r\n    } catch (error) {\r\n      console.error('Error deleting game:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewGame((prevGame) => ({ ...prevGame, [name]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Показываем индикатор загрузки\r\n  }\r\n\r\n  if (profile?.role !== 'admin') {\r\n    return null; // Если пользователь не админ, ничего не показываем\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <h1 className=\"admin-title\">Admin Page</h1>\r\n      <h2 className=\"section-title\">Manage Games</h2>\r\n      <div className=\"form-container\">\r\n        <h3>Add New Game</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={newGame.title}\r\n          onChange={handleInputChange}\r\n          className=\"input-field\"\r\n        />\r\n        <select\r\n          name=\"genre\"\r\n          value={newGame.genre}\r\n          onChange={handleInputChange}\r\n          className=\"input-field\"\r\n        >                                                                                                                                                                                   \r\n          <option value=\"\">Select Genre</option>\r\n          {genres.map((genre) => (\r\n            <option key={genre.genreid} value={genre.genreid}>\r\n              {genre.genrename}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"date\"\r\n          name=\"releaseDate\"\r\n          value={newGame.releaseDate}\r\n          onChange={handleInputChange}\r\n          className=\"input-field\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"developer\"\r\n          placeholder=\"Developer\"\r\n          value={newGame.developer}\r\n          onChange={handleInputChange}\r\n          className=\"input-field\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"publisher\"\r\n          placeholder=\"Publisher\"\r\n          value={newGame.publisher}\r\n          onChange={handleInputChange}\r\n          className=\"input-field\"\r\n        />\r\n        <select\r\n          name=\"platform\"\r\n          value={newGame.platform}\r\n          onChange={handleInputChange}\r\n          className=\"input-field\"\r\n        >\r\n          <option value=\"\">Select Platform</option>\r\n          {platforms.map((platform) => (\r\n            <option key={platform} value={platform}>\r\n              {platform}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={newGame.description}\r\n          onChange={handleInputChange}\r\n          className=\"input-field\"\r\n        ></textarea>\r\n        <input\r\n          type=\"text\"\r\n          name=\"coverImage\"\r\n          placeholder=\"Cover Image URL\"\r\n          value={newGame.coverImage}\r\n          onChange={handleInputChange}\r\n          className=\"input-field\"\r\n        />\r\n        <button onClick={handleAddGame} className=\"add-button\">Add Game</button>\r\n      </div>\r\n      <h3 className=\"section-title\">Existing Games</h3>\r\n      <ul className=\"game-list\">\r\n  {games.map((game) => (\r\n    <li key={game.gameid} className=\"game-item\">\r\n      {game.title}{' '}\r\n      <button\r\n        onClick={() => handleEditGame(game)}\r\n        className=\"update-button\"\r\n      >\r\n        Update\r\n      </button>\r\n      <button\r\n        onClick={() => handleDeleteGame(game.gameid)}\r\n        className=\"delete-button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  ))}\r\n  {isEditModalVisible && (\r\n  <div className=\"edit-modal\">\r\n    <div className=\"modal-content\">\r\n      <h3>Edit Game</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"Title\"\r\n        value={editingGame.title}\r\n        onChange={(e) =>\r\n          setEditingGame({ ...editingGame, title: e.target.value })\r\n        }\r\n        className=\"input-field\"\r\n      />\r\n      <select\r\n        name=\"genre\"\r\n        value={editingGame.genres[0]}\r\n        onChange={(e) =>\r\n          setEditingGame({ ...editingGame, genres: e.target.value })\r\n        }\r\n        className=\"input-field\"\r\n      >\r\n        <option value=\"\">Select Genre</option>\r\n        {genres.map((genre) => (\r\n          <option key={genre.genreid} value={genre.genreid}>\r\n            {genre.genrename}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        type=\"date\"\r\n        name=\"releaseDate\"\r\n        value={editingGame.releasedate}\r\n        onChange={(e) =>\r\n          setEditingGame({ ...editingGame, releaseDate: e.target.value })\r\n        }\r\n        className=\"input-field\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"developer\"\r\n        placeholder=\"Developer\"\r\n        value={editingGame.developer}\r\n        onChange={(e) =>\r\n          setEditingGame({ ...editingGame, developer: e.target.value })\r\n        }\r\n        className=\"input-field\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"publisher\"\r\n        placeholder=\"Publisher\"\r\n        value={editingGame.publisher}\r\n        onChange={(e) =>\r\n          setEditingGame({ ...editingGame, publisher: e.target.value })\r\n        }\r\n        className=\"input-field\"\r\n      />\r\n      <select\r\n        name=\"platform\"\r\n        value={editingGame.platform}\r\n        onChange={(e) =>\r\n          setEditingGame({ ...editingGame, platform: e.target.value })\r\n        }\r\n        className=\"input-field\"\r\n      >\r\n        <option value=\"\">Select Platform</option>\r\n        {platforms.map((platform) => (\r\n          <option key={platform} value={platform}>\r\n            {platform}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <textarea\r\n        name=\"description\"\r\n        placeholder=\"Description\"\r\n        value={editingGame.description}\r\n        onChange={(e) =>\r\n          setEditingGame({ ...editingGame, description: e.target.value })\r\n        }\r\n        className=\"input-field\"\r\n      ></textarea>\r\n      <input\r\n        type=\"text\"\r\n        name=\"coverImage\"\r\n        placeholder=\"Cover Image URL\"\r\n        value={editingGame.coverimage}\r\n        onChange={(e) =>\r\n          setEditingGame({ ...editingGame, coverImage: e.target.value })\r\n        }\r\n        className=\"input-field\"\r\n      />\r\n      <button onClick={handleSaveChanges} className=\"save-button\">\r\n        Save Changes\r\n      </button>\r\n      <button\r\n        onClick={() => setIsEditModalVisible(false)}\r\n        className=\"cancel-button\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n)}\r\n</ul>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}