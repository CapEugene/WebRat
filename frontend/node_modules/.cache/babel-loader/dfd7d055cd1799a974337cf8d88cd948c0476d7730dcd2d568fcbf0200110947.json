{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\BD_RPBD\\\\app_rating\\\\frontend\\\\src\\\\components\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  comments,\n  onAddComment\n}) => {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newComment.trim() === '') return;\n    try {\n      await onAddComment(newComment);\n      setNewComment(''); // Очищаем поле после добавления\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"comment-section-title\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comment-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"comment-author\",\n          children: [comment.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-text\",\n          children: comment.commenttext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, comment.commentid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write a comment...\",\n        className: \"comment-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"comment-submit-button\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comment-login-notice\",\n      children: \"Please log in to add a comment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"2sxqBKbCJgHju/ptLdIZ0YrkjYk=\");\n_c = CommentSection;\nconst styles = {\n  textarea: {\n    width: '100%',\n    height: '50px',\n    marginBottom: '10px',\n    resize: 'none'\n  },\n  button: {\n    padding: '5px 10px',\n    border: 'none',\n    backgroundColor: '#007BFF',\n    color: '#fff'\n  },\n  notice: {\n    color: '#FF0000',\n    fontStyle: 'italic'\n  }\n};\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommentSection","comments","onAddComment","_s","newComment","setNewComment","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","handleSubmit","e","preventDefault","trim","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","username","commenttext","commentid","onSubmit","value","onChange","target","placeholder","type","_c","styles","textarea","width","height","marginBottom","resize","button","padding","border","backgroundColor","color","notice","fontStyle","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/BD_RPBD/app_rating/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CommentSection = ({ comments, onAddComment }) => {\r\n  const [newComment, setNewComment] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsLoggedIn(!!token);\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newComment.trim() === '') return;\r\n\r\n    try {\r\n      await onAddComment(newComment);\r\n      setNewComment(''); // Очищаем поле после добавления\r\n    } catch (error) {\r\n      console.error('Error posting comment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      <h4 className=\"comment-section-title\">Comments</h4>\r\n      <ul className=\"comment-list\">\r\n        {comments.map((comment) => (\r\n          <li key={comment.commentid} className=\"comment-item\">\r\n            <strong className=\"comment-author\">{comment.username}:</strong>\r\n            <p className=\"comment-text\">{comment.commenttext}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {isLoggedIn ? (\r\n        <form className=\"comment-form\" onSubmit={handleSubmit}>\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder=\"Write a comment...\"\r\n            className=\"comment-textarea\"\r\n          />\r\n          <button type=\"submit\" className=\"comment-submit-button\">\r\n            Post\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <p className=\"comment-login-notice\">Please log in to add a comment.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst styles = {\r\n  textarea: { width: '100%', height: '50px', marginBottom: '10px', resize: 'none' },\r\n  button: { padding: '5px 10px', border: 'none', backgroundColor: '#007BFF', color: '#fff' },\r\n  notice: { color: '#FF0000', fontStyle: 'italic' },\r\n};\r\n\r\nexport default CommentSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}