{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\BD_RPBD\\\\app_rating\\\\frontend\\\\src\\\\pages\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchGames, addGame, deleteGame, getUserProfile } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [games, setGames] = useState([]);\n  const [profile, setProfile] = useState(null); // Изначально null, чтобы проверить, когда данные загружены\n  const [loading, setLoading] = useState(true); // Для управления состоянием загрузки\n  const navigate = useNavigate();\n  const [newGame, setNewGame] = useState({\n    title: '',\n    genre: '',\n    releaseDate: '',\n    developer: '',\n    publisher: '',\n    platform: '',\n    description: '',\n    coverImage: ''\n  });\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n      return;\n    }\n\n    // Загружаем профиль пользователя\n    getUserProfile().then(response => {\n      setProfile(response.data);\n      if (response.data.role !== 'admin') {\n        navigate('/profile'); // Перенаправляем, если не админ\n      }\n    }).catch(error => {\n      console.error('Error fetching profile:', error);\n      navigate('/'); // Перенаправляем в случае ошибки\n    }).finally(() => {\n      setLoading(false); // Завершаем загрузку\n    });\n  }, [navigate]);\n  useEffect(() => {\n    // Загружаем список игр только после загрузки профиля и если пользователь админ\n    if ((profile === null || profile === void 0 ? void 0 : profile.role) === 'admin') {\n      fetchGames().then(response => setGames(response.data)).catch(error => console.error('Error fetching games:', error));\n    }\n  }, [profile]);\n  const handleAddGame = async () => {\n    try {\n      const addedGame = await addGame(newGame);\n      setGames(prevGames => [...prevGames, addedGame]);\n      setNewGame({\n        title: '',\n        genre: '',\n        releaseDate: '',\n        developer: '',\n        publisher: '',\n        platform: '',\n        description: '',\n        coverImage: ''\n      });\n    } catch (error) {\n      console.error('Error adding game:', error);\n    }\n  };\n  const handleDeleteGame = async gameId => {\n    try {\n      await deleteGame(gameId);\n      setGames(prevGames => prevGames.filter(game => game.gameid !== gameId));\n    } catch (error) {\n      console.error('Error deleting game:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewGame(prevGame => ({\n      ...prevGame,\n      [name]: value\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this); // Показываем индикатор загрузки\n  }\n  if ((profile === null || profile === void 0 ? void 0 : profile.role) !== 'admin') {\n    return null; // Если пользователь не админ, ничего не показываем\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: newGame.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"genre\",\n        placeholder: \"Genre\",\n        value: newGame.genre,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"releaseDate\",\n        value: newGame.releaseDate,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"developer\",\n        placeholder: \"Developer\",\n        value: newGame.developer,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"publisher\",\n        placeholder: \"Publisher\",\n        value: newGame.publisher,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"platform\",\n        placeholder: \"Platform\",\n        value: newGame.platform,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: newGame.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"coverImage\",\n        placeholder: \"Cover Image URL\",\n        value: newGame.coverImage,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddGame,\n        children: \"Add Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: games.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [game.title, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteGame(game.gameid),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, game.gameid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"F/hwFNyDs86Z0AzNh6KpQ7UKg9A=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","fetchGames","addGame","deleteGame","getUserProfile","jsxDEV","_jsxDEV","AdminPage","_s","games","setGames","profile","setProfile","loading","setLoading","navigate","newGame","setNewGame","title","genre","releaseDate","developer","publisher","platform","description","coverImage","token","localStorage","getItem","then","response","data","role","catch","error","console","finally","handleAddGame","addedGame","prevGames","handleDeleteGame","gameId","filter","game","gameid","handleInputChange","e","name","value","target","prevGame","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/BD_RPBD/app_rating/frontend/src/pages/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchGames, addGame, deleteGame, getUserProfile } from '../services/api';\r\n\r\nconst AdminPage = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [profile, setProfile] = useState(null); // Изначально null, чтобы проверить, когда данные загружены\r\n  const [loading, setLoading] = useState(true); // Для управления состоянием загрузки\r\n  const navigate = useNavigate();\r\n  const [newGame, setNewGame] = useState({\r\n    title: '',\r\n    genre: '',\r\n    releaseDate: '',\r\n    developer: '',\r\n    publisher: '',\r\n    platform: '',\r\n    description: '',\r\n    coverImage: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    // Загружаем профиль пользователя\r\n    getUserProfile()\r\n      .then((response) => {\r\n        setProfile(response.data);\r\n        if (response.data.role !== 'admin') {\r\n          navigate('/profile'); // Перенаправляем, если не админ\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching profile:', error);\r\n        navigate('/'); // Перенаправляем в случае ошибки\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Завершаем загрузку\r\n      });\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    // Загружаем список игр только после загрузки профиля и если пользователь админ\r\n    if (profile?.role === 'admin') {\r\n      fetchGames()\r\n        .then((response) => setGames(response.data))\r\n        .catch((error) => console.error('Error fetching games:', error));\r\n    }\r\n  }, [profile]);\r\n\r\n  const handleAddGame = async () => {\r\n    try {\r\n      const addedGame = await addGame(newGame);\r\n      setGames((prevGames) => [...prevGames, addedGame]);\r\n      setNewGame({\r\n        title: '',\r\n        genre: '',\r\n        releaseDate: '',\r\n        developer: '',\r\n        publisher: '',\r\n        platform: '',\r\n        description: '',\r\n        coverImage: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding game:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteGame = async (gameId) => {\r\n    try {\r\n      await deleteGame(gameId);\r\n      setGames((prevGames) => prevGames.filter((game) => game.gameid !== gameId));\r\n    } catch (error) {\r\n      console.error('Error deleting game:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewGame((prevGame) => ({ ...prevGame, [name]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Показываем индикатор загрузки\r\n  }\r\n\r\n  if (profile?.role !== 'admin') {\r\n    return null; // Если пользователь не админ, ничего не показываем\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Page</h1>\r\n      <h2>Manage Games</h2>\r\n      <div>\r\n        <h3>Add New Game</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={newGame.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"genre\"\r\n          placeholder=\"Genre\"\r\n          value={newGame.genre}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"releaseDate\"\r\n          value={newGame.releaseDate}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"developer\"\r\n          placeholder=\"Developer\"\r\n          value={newGame.developer}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"publisher\"\r\n          placeholder=\"Publisher\"\r\n          value={newGame.publisher}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"platform\"\r\n          placeholder=\"Platform\"\r\n          value={newGame.platform}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={newGame.description}\r\n          onChange={handleInputChange}\r\n        ></textarea>\r\n        <input\r\n          type=\"text\"\r\n          name=\"coverImage\"\r\n          placeholder=\"Cover Image URL\"\r\n          value={newGame.coverImage}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddGame}>Add Game</button>\r\n      </div>\r\n      <h3>Existing Games</h3>\r\n      <ul>\r\n        {games.map((game) => (\r\n          <li key={game.gameid}>\r\n            {game.title}{' '}\r\n            <button onClick={() => handleDeleteGame(game.gameid)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}