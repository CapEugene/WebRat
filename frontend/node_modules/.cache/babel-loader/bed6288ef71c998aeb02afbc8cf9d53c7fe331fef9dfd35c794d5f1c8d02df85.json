{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\BD_RPBD\\\\app_rating\\\\frontend\\\\src\\\\pages\\\\GameDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReviewCard from '../components/ReviewCard';\nimport { fetchGameDetails, fetchGameReviews, fetchReviewComments, addComment, addReview, addFavorite, removeFavorite, fetchFavorites } from '../services/api';\nimport ReviewForm from '../components/ReviewForm';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameDetailsPage = () => {\n  _s();\n  const MAX_REVIEW_LENGTH = 4;\n  let {\n    id\n  } = useParams();\n  id = parseInt(id, 10);\n  const [game, setGame] = useState({});\n  const [reviews, setReviews] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [sortedReviews, setSortedReviews] = useState([]);\n  const [sortCriteria, setSortCriteria] = useState('');\n  useEffect(() => {\n    fetchGameDetails(id).then(response => setGame(response.data));\n    fetchGameReviews(id).then(async response => {\n      const reviewsWithComments = await Promise.all(response.data.map(async review => {\n        const comments = await fetchReviewComments(review.reviewid);\n        return {\n          ...review,\n          comments: comments.data,\n          expanded: false\n        };\n      }));\n      setReviews(reviewsWithComments);\n      setSortedReviews(reviewsWithComments);\n    });\n  }, [id]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n    const checkFavorites = async () => {\n      const favorites = await fetchFavorites();\n      // console.log(\"Fetched favorites:\", favorites);\n      setIsFavorite(favorites.some(favorite => favorite.gameid === id));\n    };\n    isLoggedIn && checkFavorites();\n  }, [game.gameid, id, isLoggedIn]);\n  const handleAddComment = async (reviewId, commentText) => {\n    try {\n      const newComment = await addComment(reviewId, commentText);\n\n      // console.log('New comment:', newComment);\n\n      setReviews(prevReviews => prevReviews.map(review => review.reviewid === reviewId ? {\n        ...review,\n        comments: [...review.comments, newComment]\n      } : review));\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  const toggleFavorite = async () => {\n    try {\n      if (isFavorite) {\n        await removeFavorite(game.gameid);\n        setIsFavorite(false);\n      } else {\n        await addFavorite(game.gameid);\n        setIsFavorite(true);\n      }\n    } catch (error) {\n      console.error('Failed to toggle favorite:', error);\n    }\n  };\n  const handleAddReview = async (rating, reviewText) => {\n    try {\n      const review = await addReview(id, rating, reviewText);\n      const newReview = {\n        ...review,\n        comments: [],\n        expanded: false,\n        username: review.username || 'Current User'\n      };\n      setReviews(prevReviews => [...prevReviews, newReview]);\n      setSortedReviews(prevReviews => [...prevReviews, newReview]);\n      const updatedGame = await fetchGameDetails(id);\n      setGame(updatedGame.data);\n    } catch (error) {\n      console.error('Error adding review:', error);\n    }\n  };\n  const handleSortChange = criteria => {\n    setSortCriteria(criteria);\n    const sortedReviews = [...reviews];\n    if (criteria === 'rating') {\n      sortedReviews.sort((a, b) => (b.rating || 0) - (a.rating || 0));\n    } else if (criteria === 'date') {\n      sortedReviews.sort((a, b) => new Date(b.reviewdate) - new Date(a.reviewdate));\n    }\n    setSortedReviews(sortedReviews);\n  };\n  const toggleReviewExpansion = reviewId => {\n    setReviews(prevReviews => prevReviews.map(review => review.reviewid === reviewId ? {\n      ...review,\n      expanded: !review.expanded\n    } : review));\n  };\n  const truncateText = (text, expanded) => {\n    if (expanded) return text;\n    const sentences = text.split('. ');\n    if (sentences.length <= MAX_REVIEW_LENGTH) return text;\n    return sentences.slice(0, MAX_REVIEW_LENGTH).join('. ') + '...';\n  };\n  const formatSafeDate = dataString => {\n    const date = new Date(dataString);\n    if (isNaN(date)) {\n      return 'Invalid Date';\n    }\n    return format(date, 'dd.MM.yyyy HH:mm:ss');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: game.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: game.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Main Information:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Publisher: \", game.publisher]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Developer: \", game.developer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Release Data: \", formatSafeDate(game.releasedate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Genre: \", game.genres ? game.genres.join(', ') : 'No genres available']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Platform: \", game.platform]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFavorite,\n      children: isFavorite ? 'Remove from Favorite' : 'Add to Favorites'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Write a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReviewForm, {\n      onAddReview: handleAddReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sort Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort by: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        value: sortCriteria,\n        onChange: e => handleSortChange(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rating\",\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), sortedReviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [truncateText(review.reviewtext, review.expanded), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleReviewExpansion(review.reviewid),\n          children: review.expanded ? 'Collapse' : 'Read more'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReviewCard, {\n        review: review,\n        onAddComment: handleAddComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, review.reviewid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(GameDetailsPage, \"da6Puk6LU9ikSiCXW77ZPIl7rsg=\", false, function () {\n  return [useParams];\n});\n_c = GameDetailsPage;\nexport default GameDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"GameDetailsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","ReviewCard","fetchGameDetails","fetchGameReviews","fetchReviewComments","addComment","addReview","addFavorite","removeFavorite","fetchFavorites","ReviewForm","format","jsxDEV","_jsxDEV","GameDetailsPage","_s","MAX_REVIEW_LENGTH","id","parseInt","game","setGame","reviews","setReviews","isFavorite","setIsFavorite","isLoggedIn","setIsLoggedIn","sortedReviews","setSortedReviews","sortCriteria","setSortCriteria","then","response","data","reviewsWithComments","Promise","all","map","review","comments","reviewid","expanded","token","localStorage","getItem","checkFavorites","favorites","some","favorite","gameid","handleAddComment","reviewId","commentText","newComment","prevReviews","error","console","toggleFavorite","handleAddReview","rating","reviewText","newReview","username","updatedGame","handleSortChange","criteria","sort","a","b","Date","reviewdate","toggleReviewExpansion","truncateText","text","sentences","split","length","slice","join","formatSafeDate","dataString","date","isNaN","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","publisher","developer","releasedate","genres","platform","onClick","onAddReview","htmlFor","value","onChange","e","target","reviewtext","onAddComment","_c","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/BD_RPBD/app_rating/frontend/src/pages/GameDetailsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReviewCard from '../components/ReviewCard';\r\nimport { fetchGameDetails, fetchGameReviews, fetchReviewComments, addComment, addReview, addFavorite, removeFavorite, fetchFavorites } from '../services/api';\r\nimport ReviewForm from '../components/ReviewForm';\r\nimport { format } from 'date-fns';\r\n\r\nconst GameDetailsPage = () => {\r\n  const MAX_REVIEW_LENGTH = 4;\r\n  let { id } = useParams();\r\n  id = parseInt(id, 10);\r\n  const [game, setGame] = useState({});\r\n  const [reviews, setReviews] = useState([]);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [sortedReviews, setSortedReviews] = useState([]);\r\n  const [sortCriteria, setSortCriteria] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchGameDetails(id).then((response) => setGame(response.data));\r\n    fetchGameReviews(id).then(async (response) => {\r\n      const reviewsWithComments = await Promise.all(\r\n        response.data.map(async (review) => {\r\n          const comments = await fetchReviewComments(review.reviewid);\r\n          return { ...review, comments: comments.data, expanded: false };\r\n        })\r\n      );\r\n      setReviews(reviewsWithComments);\r\n      setSortedReviews(reviewsWithComments);\r\n    });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsLoggedIn(!!token);\r\n    const checkFavorites = async () => {\r\n      const favorites = await fetchFavorites();\r\n      // console.log(\"Fetched favorites:\", favorites);\r\n      setIsFavorite(favorites.some((favorite) => favorite.gameid === id));\r\n    };\r\n\r\n    isLoggedIn && checkFavorites();\r\n  }, [game.gameid, id, isLoggedIn])\r\n\r\n  const handleAddComment = async (reviewId, commentText) => {\r\n    try {\r\n      const newComment = await addComment(reviewId, commentText);\r\n  \r\n      // console.log('New comment:', newComment);\r\n  \r\n      setReviews((prevReviews) =>\r\n        prevReviews.map((review) =>\r\n          review.reviewid === reviewId\r\n            ? { ...review, comments: [...review.comments, newComment] }\r\n            : review\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error);\r\n    }\r\n  };\r\n\r\n  const toggleFavorite = async () => {\r\n    try {\r\n      if (isFavorite) {\r\n        await removeFavorite(game.gameid);\r\n        setIsFavorite(false);\r\n      } else {\r\n        await addFavorite(game.gameid);\r\n        setIsFavorite(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to toggle favorite:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddReview = async (rating, reviewText) => {\r\n    try {\r\n      const review = await addReview(id, rating, reviewText);\r\n      const newReview = { ...review, comments: [], expanded: false, username: review.username || 'Current User' };\r\n      setReviews((prevReviews) => [...prevReviews, newReview]);\r\n      setSortedReviews((prevReviews) => [...prevReviews, newReview]);\r\n      const updatedGame = await fetchGameDetails(id);\r\n      setGame(updatedGame.data);\r\n    } catch (error) {\r\n      console.error('Error adding review:', error);\r\n    }\r\n  };\r\n\r\n  const handleSortChange = (criteria) => {\r\n    setSortCriteria(criteria);\r\n  \r\n    const sortedReviews = [...reviews];\r\n    if (criteria === 'rating') {\r\n      sortedReviews.sort((a, b) => (b.rating || 0) - (a.rating || 0));\r\n    } else if (criteria === 'date') {\r\n      sortedReviews.sort((a, b) => new Date(b.reviewdate) - new Date(a.reviewdate));\r\n    }\r\n    setSortedReviews(sortedReviews);\r\n  };\r\n\r\n  const toggleReviewExpansion = (reviewId) => {\r\n    setReviews((prevReviews) =>\r\n      prevReviews.map((review) =>\r\n        review.reviewid === reviewId ? { ...review, expanded: !review.expanded } : review\r\n      )\r\n    );\r\n  };\r\n\r\n  const truncateText = (text, expanded) => {\r\n    if (expanded) return text;\r\n\r\n    const sentences = text.split('. ');\r\n    if (sentences.length <= MAX_REVIEW_LENGTH) return text;\r\n\r\n    return sentences.slice(0, MAX_REVIEW_LENGTH).join('. ') + '...';\r\n  };\r\n\r\n  const formatSafeDate = (dataString) => {\r\n    const date = new Date(dataString);\r\n    if (isNaN(date)) {\r\n      return 'Invalid Date';\r\n    }\r\n    return format(date, 'dd.MM.yyyy HH:mm:ss');\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <h1>{game.title}</h1>\r\n      <h2>{game.description}</h2>\r\n      <h3>Main Information:</h3>\r\n      <li>Publisher: {game.publisher}</li>\r\n      <li>Developer: {game.developer}</li>\r\n      <li>Release Data: {formatSafeDate(game.releasedate)}</li>\r\n      <li>Genre: {game.genres ? game.genres.join(', ') : 'No genres available'}</li>\r\n      <li>Platform: {game.platform}</li>\r\n      {isLoggedIn && (\r\n        <button onClick={toggleFavorite}>\r\n          {isFavorite ? 'Remove from Favorite' : 'Add to Favorites'}\r\n        </button>\r\n      )}\r\n      <h3>Write a Review</h3>\r\n      <ReviewForm onAddReview={handleAddReview} />\r\n      <h3>Sort Reviews</h3>\r\n      <div>\r\n        <label htmlFor=\"sort\">Sort by: </label>\r\n        <select\r\n          id=\"sort\"\r\n          value={sortCriteria}\r\n          onChange={(e) => handleSortChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Default</option>\r\n          <option value=\"rating\">Rating</option>\r\n          <option value=\"date\">Date</option>\r\n        </select>\r\n      </div>\r\n      <h3>Reviews</h3>\r\n      {sortedReviews.map((review) => (\r\n        <div key={review.reviewid}>\r\n          <p>\r\n            {truncateText(review.reviewtext, review.expanded)}{' '}\r\n            <button onClick={() => toggleReviewExpansion(review.reviewid)}>\r\n              {review.expanded ? 'Collapse' : 'Read more'}\r\n            </button>\r\n          </p>\r\n          <ReviewCard review={review} onAddComment={handleAddComment} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameDetailsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}