{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\TP\\\\WebRat\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport GameCard from '../components/GameCard';\nimport { fetchGames } from '../services/api';\nimport '../styles/HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [games, setGames] = useState([]);\n  const [sortedGames, setSortedGames] = useState([]);\n  const [sortCriteria, setSortCriteria] = useState('');\n  const [error, setError] = useState(null); // Состояние для ошибки\n  const [loading, setLoading] = useState(true); // Состояние для загрузки\n\n  useEffect(() => {\n    fetchGames().then(response => {\n      setGames(response.data);\n      setSortedGames(response.data);\n      setError(null); // Если запрос успешен, сбрасываем ошибку\n    }).catch(err => {\n      if (err.response && err.response.status === 504) {\n        setError('Game service is currently unavailable. Please try again later.'); // Устанавливаем сообщение об ошибке\n      } else {\n        setError('An unexpected error occurred.');\n      }\n    }).finally(() => {\n      setLoading(false); // Завершаем загрузку\n    });\n  }, []);\n  const handleSortChange = criteria => {\n    setSortCriteria(criteria);\n    const sorted = [...games];\n    if (criteria === 'reviews') {\n      sorted.sort((a, b) => (b.reviewcount || 0) - (a.reviewcount || 0));\n    } else if (criteria === 'rating') {\n      sorted.sort((a, b) => (b.averagerating || 0) - (a.averagerating || 0));\n    }\n    setSortedGames(sorted);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this); // Можете заменить на ваш индикатор загрузки\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        className: \"sort-label\",\n        children: \"Sort by: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        value: sortCriteria,\n        onChange: e => handleSortChange(e.target.value),\n        className: \"sort-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"reviews\",\n          children: \"Number of Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rating\",\n          children: \"Average Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-grid\",\n      children: sortedGames.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n        game: game\n      }, game.gameid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"GJW00NArOGnuI/ZKYW5M3393WCA=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","GameCard","fetchGames","jsxDEV","_jsxDEV","HomePage","_s","games","setGames","sortedGames","setSortedGames","sortCriteria","setSortCriteria","error","setError","loading","setLoading","then","response","data","catch","err","status","finally","handleSortChange","criteria","sorted","sort","a","b","reviewcount","averagerating","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","value","onChange","e","target","map","game","gameid","_c","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/TP/WebRat/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport GameCard from '../components/GameCard';\r\nimport { fetchGames } from '../services/api';\r\nimport '../styles/HomePage.css';\r\n\r\nconst HomePage = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [sortedGames, setSortedGames] = useState([]);\r\n  const [sortCriteria, setSortCriteria] = useState('');\r\n  const [error, setError] = useState(null); // Состояние для ошибки\r\n  const [loading, setLoading] = useState(true); // Состояние для загрузки\r\n\r\n  useEffect(() => {\r\n    fetchGames()\r\n      .then((response) => {\r\n        setGames(response.data);\r\n        setSortedGames(response.data);\r\n        setError(null); // Если запрос успешен, сбрасываем ошибку\r\n      })\r\n      .catch((err) => {\r\n        if (err.response && err.response.status === 504) {\r\n          setError('Game service is currently unavailable. Please try again later.'); // Устанавливаем сообщение об ошибке\r\n        } else {\r\n          setError('An unexpected error occurred.');\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Завершаем загрузку\r\n      });\r\n  }, []);\r\n\r\n  const handleSortChange = (criteria) => {\r\n    setSortCriteria(criteria);\r\n\r\n    const sorted = [...games];\r\n    if (criteria === 'reviews') {\r\n      sorted.sort((a, b) => (b.reviewcount || 0) - (a.reviewcount || 0));\r\n    } else if (criteria === 'rating') {\r\n      sorted.sort((a, b) => (b.averagerating || 0) - (a.averagerating || 0));\r\n    }\r\n\r\n    setSortedGames(sorted);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Можете заменить на ваш индикатор загрузки\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <h1 className=\"home-title\">Games</h1>\r\n      <div className=\"sort-container\">\r\n        <label htmlFor=\"sort\" className=\"sort-label\">Sort by: </label>\r\n        <select\r\n          id=\"sort\"\r\n          value={sortCriteria}\r\n          onChange={(e) => handleSortChange(e.target.value)}\r\n          className=\"sort-select\"\r\n        >\r\n          <option value=\"\">Default</option>\r\n          <option value=\"reviews\">Number of Reviews</option>\r\n          <option value=\"rating\">Average Rating</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Показываем сообщение об ошибке, если оно есть */}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"game-grid\">\r\n        {sortedGames.map((game) => (\r\n          <GameCard key={game.gameid} game={game} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}