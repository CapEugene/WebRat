{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\BD_RPBD\\\\app_rating\\\\frontend\\\\src\\\\pages\\\\GameDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReviewCard from '../components/ReviewCard';\nimport { fetchGameDetails, fetchGameReviews, fetchReviewComments, addComment } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameDetailsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [game, setGame] = useState({});\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    fetchGameDetails(id).then(response => setGame(response.data));\n    fetchGameReviews(id).then(async response => {\n      const reviewsWithComments = await Promise.all(response.data.map(async review => {\n        const comments = await fetchReviewComments(review.reviewid);\n        return {\n          ...review,\n          comments: comments.data\n        };\n      }));\n      setReviews(reviewsWithComments);\n    });\n  }, [id]);\n  const handleAddComment = async (reviewId, commentText) => {\n    try {\n      const newComment = await addComment(reviewId, commentText);\n\n      // console.log('New comment:', newComment);\n\n      setReviews(prevReviews => prevReviews.map(review => review.reviewid === reviewId ? {\n        ...review,\n        comments: [...review.comments, newComment]\n      } : review));\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: game.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: game.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Main Information:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Publisher: \", game.publisher]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Developer: \", game.developer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Release Data: \", game.releasedate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Genre: \", game.genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Platform: \", game.platform]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), reviews.map(review => /*#__PURE__*/_jsxDEV(ReviewCard, {\n      review: review,\n      onAddComment: handleAddComment\n    }, review.reviewid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(GameDetailsPage, \"mYfnH7LbHQPAR49Vgdw3Dy6lbnM=\", false, function () {\n  return [useParams];\n});\n_c = GameDetailsPage;\nexport default GameDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"GameDetailsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","ReviewCard","fetchGameDetails","fetchGameReviews","fetchReviewComments","addComment","jsxDEV","_jsxDEV","GameDetailsPage","_s","id","game","setGame","reviews","setReviews","then","response","data","reviewsWithComments","Promise","all","map","review","comments","reviewid","handleAddComment","reviewId","commentText","newComment","prevReviews","error","console","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","publisher","developer","releasedate","genre","platform","onAddComment","_c","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/BD_RPBD/app_rating/frontend/src/pages/GameDetailsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReviewCard from '../components/ReviewCard';\r\nimport { fetchGameDetails, fetchGameReviews, fetchReviewComments, addComment } from '../services/api';\r\n\r\nconst GameDetailsPage = () => {\r\n  const { id } = useParams();\r\n  const [game, setGame] = useState({});\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchGameDetails(id).then((response) => setGame(response.data));\r\n    fetchGameReviews(id).then(async (response) => {\r\n      const reviewsWithComments = await Promise.all(\r\n        response.data.map(async (review) => {\r\n          const comments = await fetchReviewComments(review.reviewid);\r\n          return { ...review, comments: comments.data };\r\n        })\r\n      );\r\n      setReviews(reviewsWithComments);\r\n    });\r\n  }, [id]);\r\n\r\n  const handleAddComment = async (reviewId, commentText) => {\r\n    try {\r\n      const newComment = await addComment(reviewId, commentText);\r\n  \r\n      // console.log('New comment:', newComment);\r\n  \r\n      setReviews((prevReviews) =>\r\n        prevReviews.map((review) =>\r\n          review.reviewid === reviewId\r\n            ? { ...review, comments: [...review.comments, newComment] }\r\n            : review\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h1>{game.title}</h1>\r\n      <h2>{game.description}</h2>\r\n      <h3>Main Information:</h3>\r\n      <li>Publisher: {game.publisher}</li>\r\n      <li>Developer: {game.developer}</li>\r\n      <li>Release Data: {game.releasedate}</li>\r\n      <li>Genre: {game.genre}</li>\r\n      <li>Platform: {game.platform}</li>\r\n      <h3>Reviews</h3>\r\n      {reviews.map((review) => (\r\n        <ReviewCard key={review.reviewid} review={review} onAddComment={handleAddComment} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameDetailsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}