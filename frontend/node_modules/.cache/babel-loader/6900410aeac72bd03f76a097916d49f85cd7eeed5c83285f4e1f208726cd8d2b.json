{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\BD_RPBD\\\\app_rating\\\\frontend\\\\src\\\\components\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  comments,\n  onAddComment\n}) => {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const [localComments, setLocalComments] = useState(comments); // Локальный список комментариев\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token); // Устанавливаем, авторизован ли пользователь\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // if (!newComment.trim()) return; // Предотвращаем отправку пустых комментариев\n\n    try {\n      const addedComment = await onAddComment(newComment); // Отправляем комментарий и получаем данные нового комментария\n      setLocalComments(prevComments => [...prevComments, addedComment]); // Обновляем локальный список\n      setNewComment(''); // Очищаем поле ввода\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: localComments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), \" \", comment.commenttext]\n      }, comment.commentid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write a comment...\",\n        style: styles.textarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.notice,\n      children: \"Please log in to add a comment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"Y/dVeyNurXw6uu9uTD3z3dqIyu0=\");\n_c = CommentSection;\nconst styles = {\n  textarea: {\n    width: '100%',\n    height: '50px',\n    marginBottom: '10px',\n    resize: 'none'\n  },\n  button: {\n    padding: '5px 10px',\n    border: 'none',\n    backgroundColor: '#007BFF',\n    color: '#fff'\n  },\n  notice: {\n    color: '#FF0000',\n    fontStyle: 'italic'\n  }\n};\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommentSection","comments","onAddComment","_s","newComment","setNewComment","localComments","setLocalComments","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","handleSubmit","e","preventDefault","addedComment","prevComments","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","username","commenttext","commentid","onSubmit","value","onChange","target","placeholder","style","styles","textarea","type","button","notice","_c","width","height","marginBottom","resize","padding","border","backgroundColor","color","fontStyle","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/BD_RPBD/app_rating/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CommentSection = ({ comments, onAddComment }) => {\r\n  const [newComment, setNewComment] = useState('');\r\n  const [localComments, setLocalComments] = useState(comments); // Локальный список комментариев\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsLoggedIn(!!token); // Устанавливаем, авторизован ли пользователь\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // if (!newComment.trim()) return; // Предотвращаем отправку пустых комментариев\r\n\r\n    try {\r\n      const addedComment = await onAddComment(newComment); // Отправляем комментарий и получаем данные нового комментария\r\n      setLocalComments((prevComments) => [...prevComments, addedComment]); // Обновляем локальный список\r\n      setNewComment(''); // Очищаем поле ввода\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Comments</h4>\r\n      <ul>\r\n        {localComments.map((comment) => (\r\n          <li key={comment.commentid}>\r\n            <strong>{comment.username}:</strong> {comment.commenttext}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {isLoggedIn ? (\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder=\"Write a comment...\"\r\n            style={styles.textarea}\r\n          />\r\n          <button type=\"submit\" style={styles.button}>\r\n            Post\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <p style={styles.notice}>Please log in to add a comment.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  textarea: { width: '100%', height: '50px', marginBottom: '10px', resize: 'none' },\r\n  button: { padding: '5px 10px', border: 'none', backgroundColor: '#007BFF', color: '#fff' },\r\n  notice: { color: '#FF0000', fontStyle: 'italic' },\r\n};\r\n\r\nexport default CommentSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}