{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EvgeXa\\\\Desktop\\\\TP\\\\WebRat\\\\frontend\\\\src\\\\components\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/CommentSection.css';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  comments,\n  onAddComment\n}) => {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const [commentList, setCommentList] = useState(comments || []); // Локальное состояние комментариев\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [error, setError] = useState(null); // Состояние для ошибок\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newComment.trim() === '') return; // Прекращаем выполнение, если комментарий пустой\n\n    try {\n      const addedComment = await onAddComment(newComment);\n      setCommentList(prev => [...prev, addedComment]);\n      setNewComment(''); // Очищаем поле ввода\n      setError(null); // Сбрасываем ошибку после успешного добавления\n    } catch (error) {\n      setError('Failed to post comment. Please try again later.'); // Устанавливаем сообщение об ошибке\n      console.error('Error posting comment:', error);\n    }\n  };\n  const formatSafeDate = dataString => {\n    const date = new Date(dataString);\n    if (isNaN(date)) {\n      return 'Invalid Date';\n    }\n    return format(date, 'dd.MM.yyyy');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"comment-section-title\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comment-list\",\n      children: commentList.length > 0 ? commentList.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"comment-author\",\n          children: [(comment === null || comment === void 0 ? void 0 : comment.username) || 'Unknown User', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time\",\n          children: formatSafeDate(comment.commentdate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-text\",\n          children: (comment === null || comment === void 0 ? void 0 : comment.commenttext) || 'No text available'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, (comment === null || comment === void 0 ? void 0 : comment.commentid) || Math.random(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) // Сообщение, если нет комментариев\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write a comment...\",\n        className: \"comment-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"comment-submit-button\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comment-login-notice\",\n      children: \"Please log in to add a comment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"P7CLXBnrgvmqRZncyVnuaYFEtqc=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","format","jsxDEV","_jsxDEV","CommentSection","comments","onAddComment","_s","newComment","setNewComment","commentList","setCommentList","isLoggedIn","setIsLoggedIn","error","setError","token","localStorage","getItem","handleSubmit","e","preventDefault","trim","addedComment","prev","console","formatSafeDate","dataString","date","Date","isNaN","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","comment","username","commentdate","commenttext","commentid","Math","random","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/EvgeXa/Desktop/TP/WebRat/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/CommentSection.css';\r\nimport { format } from 'date-fns';\r\n\r\nconst CommentSection = ({ comments, onAddComment }) => {\r\n  const [newComment, setNewComment] = useState('');\r\n  const [commentList, setCommentList] = useState(comments || []); // Локальное состояние комментариев\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [error, setError] = useState(null); // Состояние для ошибок\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsLoggedIn(!!token);\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newComment.trim() === '') return; // Прекращаем выполнение, если комментарий пустой\r\n\r\n    try {\r\n      const addedComment = await onAddComment(newComment);\r\n      setCommentList((prev) => [...prev, addedComment]);\r\n      setNewComment(''); // Очищаем поле ввода\r\n      setError(null); // Сбрасываем ошибку после успешного добавления\r\n    } catch (error) {\r\n      setError('Failed to post comment. Please try again later.'); // Устанавливаем сообщение об ошибке\r\n      console.error('Error posting comment:', error);\r\n    }\r\n  };\r\n\r\n  const formatSafeDate = (dataString) => {\r\n    const date = new Date(dataString);\r\n    if (isNaN(date)) {\r\n      return 'Invalid Date';\r\n    }\r\n    return format(date, 'dd.MM.yyyy');\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      <h4 className=\"comment-section-title\">Comments</h4>\r\n\r\n      {/* Отображаем ошибку, если она есть */}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <ul className=\"comment-list\">\r\n        {commentList.length > 0 ? (\r\n          commentList.map((comment) => (\r\n            <li key={comment?.commentid || Math.random()} className=\"comment-item\">\r\n              <strong className=\"comment-author\">\r\n                {comment?.username || 'Unknown User'}:\r\n              </strong>\r\n              <p className=\"time\">{formatSafeDate(comment.commentdate)}</p>\r\n              <p className=\"comment-text\">{comment?.commenttext || 'No text available'}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No comments available.</p> // Сообщение, если нет комментариев\r\n        )}\r\n      </ul>\r\n\r\n      {isLoggedIn ? (\r\n        <form className=\"comment-form\" onSubmit={handleSubmit}>\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder=\"Write a comment...\"\r\n            className=\"comment-textarea\"\r\n          />\r\n          <button type=\"submit\" className=\"comment-submit-button\">\r\n            Post\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <p className=\"comment-login-notice\">Please log in to add a comment.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}