{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst axiosInstance = axios.create({\n  baseURL: API_URL\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const fetchGames = () => axios.get(`${API_URL}/games`);\nexport const fetchGameDetails = id => axios.get(`${API_URL}/games/${id}`);\nexport const fetchGameReviews = gameId => axios.get(`${API_URL}/reviews/${gameId}`);\nexport const registerUser = data => axios.post(`${API_URL}/auth/register`, data);\nexport const loginUser = data => axios.post(`${API_URL}/auth/login`, data);\nexport const addComment = async (reviewId, commentText) => {\n  const response = await axios.post(`http://localhost:5000/api/reviews/${reviewId}/comments`, {\n    commentText\n  });\n  return response.data; // Предполагается, что API возвращает добавленный комментарий\n};","map":{"version":3,"names":["axios","API_URL","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","fetchGames","get","fetchGameDetails","id","fetchGameReviews","gameId","registerUser","data","post","loginUser","addComment","reviewId","commentText","response"],"sources":["C:/Users/EvgeXa/Desktop/BD_RPBD/app_rating/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n});\r\n\r\naxiosInstance.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\nexport const fetchGames = () => axios.get(`${API_URL}/games`);\r\nexport const fetchGameDetails = (id) => axios.get(`${API_URL}/games/${id}`);\r\nexport const fetchGameReviews = (gameId) => axios.get(`${API_URL}/reviews/${gameId}`);\r\nexport const registerUser = (data) => axios.post(`${API_URL}/auth/register`, data);\r\nexport const loginUser = (data) => axios.post(`${API_URL}/auth/login`, data);\r\nexport const addComment = async (reviewId, commentText) => {\r\n    const response = await axios.post(`http://localhost:5000/api/reviews/${reviewId}/comments`, { commentText });\r\n    return response.data; // Предполагается, что API возвращает добавленный комментарий\r\n};\r\n  \r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BC,OAAO,EAAEH;AACb,CAAC,CAAC;AAEFC,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC/C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEJ,OAAO,MAAMM,UAAU,GAAGA,CAAA,KAAMd,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,QAAQ,CAAC;AAC7D,OAAO,MAAMe,gBAAgB,GAAIC,EAAE,IAAKjB,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,UAAUgB,EAAE,EAAE,CAAC;AAC3E,OAAO,MAAMC,gBAAgB,GAAIC,MAAM,IAAKnB,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,YAAYkB,MAAM,EAAE,CAAC;AACrF,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAKrB,KAAK,CAACsB,IAAI,CAAC,GAAGrB,OAAO,gBAAgB,EAAEoB,IAAI,CAAC;AAClF,OAAO,MAAME,SAAS,GAAIF,IAAI,IAAKrB,KAAK,CAACsB,IAAI,CAAC,GAAGrB,OAAO,aAAa,EAAEoB,IAAI,CAAC;AAC5E,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,WAAW,KAAK;EACvD,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAACsB,IAAI,CAAC,qCAAqCG,QAAQ,WAAW,EAAE;IAAEC;EAAY,CAAC,CAAC;EAC5G,OAAOC,QAAQ,CAACN,IAAI,CAAC,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}